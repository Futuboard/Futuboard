services:
  database:
    image: postgres:17.0
    restart: "no"
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 3s
      start_period: 30s
    volumes:
      - ./db:/var/lib/postgresql/data

  frontend:
    build: ./frontend
    command: "npm run dev -- --host"
    restart: "no"
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - ./frontend/node_modules/
            - ./frontend/.env
        - action: rebuild
          path: ./frontend/package.json
    depends_on:
      - backend

  backend:
    build: ./backend
    command: sh -c "python manage.py migrate & python manage.py runserver 0.0.0.0:8000 & daphne -b 0.0.0.0 -p 5555 backend.asgi:application"
    restart: "no"
    env_file:
      - .env
      - .env.docker
    ports:
      - "5555:5555"
      - "8000:8000"
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - .env
        - action: rebuild
          path: ./backend/requirements.txt
    depends_on:
      database:
        condition: service_healthy
